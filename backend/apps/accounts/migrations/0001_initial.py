# Generated by Django 5.0.9 on 2025-10-11 01:05

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the user', primary_key=True, serialize=False)),
                ('email', models.EmailField(help_text='User email address (used for login)', max_length=255, unique=True)),
                ('full_name', models.CharField(blank=True, help_text='Full name of the user', max_length=255)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, help_text='Current account balance', max_digits=15)),
                ('bot_type', models.CharField(choices=[('none', 'No Bot'), ('basic', 'Basic Bot - 250 EUR'), ('premium', 'Premium Bot - 500 EUR'), ('specialist', 'Specialist Trading - 1000 EUR')], default='none', help_text='Active bot subscription type', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False, help_text='KYC verification status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, help_text='Last IP address used for login', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['email'], name='users_email_4b85f2_idx'), models.Index(fields=['created_at'], name='users_created_6541e9_idx')],
            },
        ),
    ]
